# Generated by Django 3.2.7 on 2021-09-15 20:03

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Case',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64)),
                ('case_type', models.CharField(choices=[('Mini_tower', 'Mini Tower'), ('Midi_tower', 'Midi Tower'), ('Big_tower', 'Big Tower'), ('Micro_tower', 'Micro Tower'), ('Media_center', 'Media Center'), ('ITX', 'ITX')], max_length=20)),
                ('motherboard_standard', models.CharField(choices=[('miniATX', 'miniITX'), ('microATX', 'microATX'), ('ATX', 'ATX')], max_length=10)),
                ('has_RGB', models.BooleanField()),
            ],
        ),
        migrations.CreateModel(
            name='Disc',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('type', models.CharField(choices=[('HDD', 'HDD'), ('SSD', 'SSD'), ('M.2', 'M.2')], max_length=5)),
                ('memory_in_gb', models.PositiveIntegerField()),
                ('disc_format', models.CharField(choices=[('m_2', 'M.2'), ('2.5', '2.5'), ('3.5', '3.5')], max_length=5)),
            ],
        ),
        migrations.CreateModel(
            name='GraphicCard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64)),
                ('slot_type', models.CharField(choices=[('PCI_E_3.0', 'PCI Express 3.0 x16')], max_length=20)),
                ('memory', models.IntegerField()),
                ('mhz', models.IntegerField()),
                ('fans_number', models.PositiveSmallIntegerField(default=1)),
                ('ram_memory_type', models.CharField(choices=[('GDDR3', 'GDDR3'), ('GDDR4', 'GDDR4'), ('GDDR5', 'GDDR5'), ('GDDR6', 'GDDR6'), ('GDDR6X', 'GDDR6X')], max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='Memory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64)),
                ('memory_type', models.CharField(choices=[('DDR', 'DDR'), ('DDR2', 'DDR2'), ('DDR3', 'DDR3'), ('DDR4', 'DDR4'), ('DDR5', 'DDR5')], max_length=10)),
                ('mhz', models.PositiveSmallIntegerField()),
                ('memory_in_gb', models.PositiveIntegerField()),
                ('delay', models.CharField(max_length=5)),
            ],
        ),
        migrations.CreateModel(
            name='MotherBoard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64)),
                ('size', models.CharField(choices=[('miniATX', 'miniITX'), ('microATX', 'microATX'), ('ATX', 'ATX')], max_length=15)),
                ('socket', models.CharField(choices=[('LGA_775', 'LGA 775'), ('LGA_1151', 'LGA 1151'), ('LGA_1155', 'LGA 1155'), ('AM3', 'AM3'), ('AM4', 'AM4')], max_length=15)),
                ('ram_slots', models.PositiveSmallIntegerField(default=2)),
                ('memory_type', models.CharField(choices=[('DDR', 'DDR'), ('DDR2', 'DDR2'), ('DDR3', 'DDR3'), ('DDR4', 'DDR4'), ('DDR5', 'DDR5')], max_length=5)),
                ('memory_frequency_lowest', models.PositiveSmallIntegerField()),
                ('memory_frequency_highest', models.PositiveSmallIntegerField()),
                ('m2_disc_slots', models.PositiveSmallIntegerField(default=1)),
                ('sata_disc_slots', models.PositiveSmallIntegerField(default=1)),
                ('usb_amount', models.PositiveSmallIntegerField(default=4)),
                ('PCI_slots', models.PositiveSmallIntegerField(default=1)),
                ('PCI_express_slots', models.PositiveSmallIntegerField(default=1)),
                ('has_RGB', models.BooleanField(default=False)),
                ('user', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PowerSupply',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64)),
                ('power', models.PositiveSmallIntegerField()),
                ('format_type', models.CharField(max_length=5)),
            ],
        ),
        migrations.CreateModel(
            name='Processor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64)),
                ('socket', models.CharField(choices=[('LGA_775', 'LGA 775'), ('LGA_1151', 'LGA 1151'), ('LGA_1155', 'LGA 1155'), ('AM3', 'AM3'), ('AM4', 'AM4')], max_length=10)),
                ('cores', models.PositiveSmallIntegerField()),
                ('threads', models.PositiveSmallIntegerField()),
                ('watts', models.PositiveSmallIntegerField()),
                ('ghz', models.FloatField(default=1.0)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=100, unique=True)),
                ('password', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Wallet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('money_amount', models.IntegerField(default=1000)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Shop',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('case', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='case_shop', to='service_app.motherboard')),
                ('disc', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='disc_shop', to='service_app.motherboard')),
                ('graphic', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='graphic_shop', to='service_app.motherboard')),
                ('memory', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='memory_shop', to='service_app.motherboard')),
                ('motherboard', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='motherboard_shop', to='service_app.motherboard')),
                ('power_supply', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='power_supply_shop', to='service_app.motherboard')),
                ('processor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='processor_shop', to='service_app.motherboard')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_shop', to=settings.AUTH_USER_MODEL)),
                ('wallet', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='wallet_shop', to='service_app.wallet')),
            ],
        ),
        migrations.CreateModel(
            name='PC',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('case', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='service_app.case')),
                ('disc', models.ManyToManyField(to='service_app.Disc')),
                ('graphic_card', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='service_app.graphiccard')),
                ('memory', models.ManyToManyField(to='service_app.Memory')),
                ('motherboard', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='service_app.motherboard')),
                ('power_supply', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='service_app.powersupply')),
                ('processor', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='service_app.processor')),
            ],
        ),
    ]
